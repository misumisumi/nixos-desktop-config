name: update repository
on:
  workflow_dispatch: # allows manual triggering
  schedule:
    - cron: "0 19 * * 5" # runs weekly on Saturday at 04:00 (JST)

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update-repo:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'misumisumi'
    steps:
      - uses: actions/checkout@v5

      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup git account
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: DeterminateSystems/update-flake-lock@v27
        id: update
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-msg: "chore(flake.lock): auto update flake.lock"
          pr-title: "chore(flake.lock): auto update flake.lock" # Title of PR to be created
          pr-labels: | # Labels to be set on the PR
            dependencies
            automated

  check-evaluation-warning:
    runs-on: ubuntu-latest
    needs: update-repo
    strategy:
      fail-fast: false
      matrix:
        hostname:
          [
            "mother",
            "stacia",
            "zephyrus",
            "liveimg-minimal-iso",
            "liveimg-gnome-iso",
          ]
    steps:
      - name: Check evaluation warning
        run: |
          TMPFILE=$(mktemp)
          nix run nixpkgs#nixos-rebuild -- dry-build --flake ".#${{ matrix.hostname }}" --option pure-eval false --option eval-cache false 2>>"${TMPFILE}"

          START=$(grep -n "evaluation warning:" "${TMPFILE}" | head -n1 | awk -F":" '{print $1}')
          if [ -n "${START}" ]; then
            LAST=$(grep -n "will be built" "${TMPFILE}" | awk -F":" '{print $1}')
            if [ -n "${LAST}" ]; then
              LAST=$(("${LAST}" - 1))
            else
              LAST="$"
            fi

            sed -n ''"${START}"','"${LAST}"'p' <"${TMPFILE}" | grep -v "unpacking" | grep -v "copying path" | grep -v "building" | sed -e "s/'/\`/g" >eval_warning-${{ matrix.hostname }}.log
          fi

      - name: upload-evaluation-result
        uses: actions/upload-artifact@v5
        with:
          name: eval-warning-${{ matrix.hostname }}
          path: eval_warning-${{ matrix.hostname }}.log
          retention-days: 1

  create-issue:
    runs-on: ubuntu-latest
    needs: check-evaluation-warning
    steps:
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: download-evaluation-result
        uses: actions/download-artifact@v5
        with:
          pattern: eval-warning-*
          path: downloaded_eval-warnings

      - name: gh-issue-create
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cat downloaded_eval-warnings/*.log | sort -k 5 -u > eval_warning.log
          gh issue create -t "Evaluation Warning" -F eval_warning.log -l deprecated
