{{- $hostName := .chezmoi.hostname -}}
{{- $hostDebloatConfig := or (get (or (get .windows.hosts $hostName) dict) "debloat") dict -}}

# Self-elevate the script if required
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
    if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
        $CommandLine = "-NoProfile -File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
        Start-Process -Wait -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine
        Exit
    }
}
$FNAME=Split-Path -Path $MyInvocation.MyCommand.Path -Leaf
function Logging($1) {
    Write-Output "${FNAME}: $1"
}

Logging "Start"

# Show error if current powershell environment does not have LanguageMode set to FullLanguage
if ($ExecutionContext.SessionState.LanguageMode -ne "FullLanguage") {
     Logging "Error: Win11Debloat is unable to run on your system. Powershell execution is restricted by security policies" -ForegroundColor Red
     Start-Sleep -Seconds 3
     Exit
}

Logging "Downloading Win11Debloat..."

# Download latest version of Win11Debloat from github as zip archive
Invoke-WebRequest http://github.com/raphire/win11debloat/archive/master.zip -OutFile "$env:TEMP/win11debloat-temp.zip"

# Remove old script folder if it exists, except for CustomAppsList and SavedSettings files
if (Test-Path "$env:TEMP/Win11Debloat/Win11Debloat-master") {
        Logging "Cleaning up old Win11Debloat folder..."
        Get-ChildItem -Path "$env:TEMP/Win11Debloat/Win11Debloat-master" -Exclude CustomAppsList,SavedSettings | Remove-Item -Recurse -Force
}

Logging "Unpacking..."

# Unzip archive to Win11Debloat folder
Expand-Archive "$env:TEMP/win11debloat-temp.zip" "$env:TEMP/Win11Debloat"

# Remove archive
Remove-Item "$env:TEMP/win11debloat-temp.zip"

Set-Location -Path $env:TEMP\Win11Debloat\Win11Debloat-master

{{ $removeApps := concat .windows.system.debloat.remove_apps (or (get $hostDebloatConfig "remove_apps") list) }}
if (Test-Path CustomAppsList) {
    rm CustomAppsList
}
@"
{{ $removeApps | join "\n" }}
"@ > CustomAppsList

{{ $debloatOptions := concat .windows.system.debloat.options (or (get $hostDebloatConfig "options") list)}}
# Remove unnecessary default apps and settings
#INFO: https://github.com/Raphire/Win11Debloat
Logging "Running Win11Debloat..."
.\Win11Debloat.ps1 {{ $debloatOptions | join " " }}

Set-Location -Path $env:TEMP

# Remove all remaining script files, except for CustomAppsList and SavedSettings files
if (Test-Path "$env:TEMP/Win11Debloat/Win11Debloat-master") {
    Logging "Cleaning up..."

    # Cleanup, remove Win11Debloat directory
    Get-ChildItem -Path "$env:TEMP/Win11Debloat/Win11Debloat-master" -Exclude CustomAppsList,SavedSettings | Remove-Item -Recurse -Force
}

Logging "Finish"
Start-Sleep -Seconds 1
exit
